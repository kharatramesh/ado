trigger: none
pool: projectagent  
stages:
- stage: "LearningDockerPipeline"
  displayName: "Build Stage"
  jobs:
  - job: "LoginToDocker"
    displayName: "Login to Docker"
    steps:
    - script: echo "Trying to login to Docker"
      displayName: "Login to Docker"
    - script: hostname
      displayName: "Hostname"

    - task: Docker@2
      displayName: "LoginProcess"
      inputs:
        command: 'login'
        containerRegistry: dockerhubconnection
    - script: hostname
      displayName: "Build the Image"
    - script: echo "Trying build/Fry Images/Vadapav"
      displayName: "Building Image"
    - task: Docker@2
      displayName: "Build Image"
      inputs:
        command: 'build'
        dockerfile: "Dockerfile"
        repository: kharatramesh/samosa
        tags: build4
    - script: hostname
      displayName: "hostname"
    - task: Docker@2
      displayName: "PushThe Image"
      inputs:
        command: 'push'
        containerRegistry: dockerhubconnection
        repository: kharatramesh/samosa
        tags: build4
- stage: "Deployment"
  # displayName: "Deploy"
  jobs:
   
  - job: "DeployinK8s"
    # displayname: "Deployment"
    steps:
    - checkout: self    
    # - script: kubectl apply -f app1.yaml -n trainer
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 's1k8s'
        kubernetesCluster: 'cluster1'
        dockerRegistryConnection: dockerhubconnection
        namespace: 'trainer'
        command: apply
        arguments: -f app1.yaml
    # - task: Kubernetes@0
    #   displayName: "Deploy to Kubernetes"
    #   inputs:
    #     connectionType: 'Kubernetes Service Connection'
    #     kubernetesServiceEndpoint: 's1k8s'
    #     kubernetesCluster: 'cluster1'
    #     dockerRegistryConnection: dockerhubconnection
    #     namespace: 'trainer'
    #     command: 'apply'
    #     arguments: '-f app1.yaml'
  dependsOn: "LearningDockerPipeline"
